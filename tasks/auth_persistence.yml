---
# Version: 1.3.0
# Description: Persist Solr credentials to host_vars and backup locations
# Changelog v1.3.0:
#   - Variable naming fixed: solr_*_password in host_vars 
#   - Internal use: admin_password, support_password, customer_password

- name: Persist credentials to host_vars
  blockinfile:
    path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}"
    create: true
    marker: "# {mark} ANSIBLE MANAGED SOLR CREDENTIALS"
    block: |
      # Solr authentication credentials
      # Host: {{ inventory_hostname }}
      # Customer: {{ customer_name | default('default') }}
      # Plaintext passwords (for host_vars reference) 
      solr_admin_password: "{{ solr_admin_password }}" 
      solr_support_password: "{{ solr_support_password }}" 
      solr_customer_password: "{{ solr_customer_password }}" 
      # Usernames
      solr_admin_user: "{{ solr_admin_user | default('admin') }}"
      solr_support_user: "{{ solr_support_user | default('support') }}"
      solr_customer_user: "{{ solr_customer_user | default('customer') }}"
  delegate_to: localhost
  run_once: true

- name: install-solr - Create credential backup file
  copy:
    content: |
      # Solr Credentials Backup
      # Customer: {{ customer_name | default('default') }}
      # Host: {{ inventory_hostname }}
      # Generated: {{ ansible_date_time.iso8601 }}
      #
      # KEEP THIS FILE SECURE
      
      Admin User: {{ solr_admin_user | default('admin') }}
      Admin Password: {{ solr_admin_password }}
      
      Support User: {{ solr_support_user | default('support') }}
      Support Password: {{ solr_support_password }}
      
      Customer User: {{ solr_customer_user | default('customer') }}
      Customer Password: {{ solr_customer_password }}
      
      Solr Port: {{ solr_port }}
      Container: {{ solr_container_name }}
    dest: "/var/solr/.credentials_backup_{{ ansible_date_time.epoch }}"
    owner: "8983"
    group: "8983"
    mode: '0400'
  become: true
  when: solr_backup_credentials | default(false)

- name: install-solr - Create Rundeck credential file
  copy:
    content: |
      {
        "host": "{{ inventory_hostname }}",
        "customer": "{{ customer_name | default('default') }}",
        "solr_port": {{ solr_port }},
        "solr_container": "{{ solr_container_name }}",
        "credentials": {
          "admin": {
            "username": "{{ solr_admin_user | default('admin') }}",
            "password": "{{ solr_admin_password }}"
          },
          "support": {
            "username": "{{ solr_support_user | default('support') }}",
            "password": "{{ solr_support_password }}"
          },
          "customer": {
            "username": "{{ solr_customer_user | default('customer') }}",
            "password": "{{ solr_customer_password }}"
          }
        },
        "configured_date": "{{ ansible_date_time.iso8601 }}",
        "version": "1.3.0"
      }
    dest: "/var/solr/.rundeck_credentials.json"
    owner: "8983"
    group: "8983"
    mode: '0400'
  become: true
  when: rundeck_integration_enabled | default(false)

- name: install-solr - Create Rundeck output
  set_fact:
    auth_persistence_result:
      status: "success"
      timestamp: "{{ ansible_date_time.iso8601 }}"
      message: "Credentials persisted successfully"
      details:
        host_vars_file: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}"
        backup_file: "/var/solr/.credentials_backup_{{ ansible_date_time.epoch }}"
        rundeck_file: "{{ '/var/solr/.rundeck_credentials.json' if rundeck_integration_enabled | default(false) else 'not created' }}"
        users_configured: 3
        encryption_recommended: true
  when: rundeck_integration_enabled | default(false)

- name: install-solr - Display Rundeck output
  debug:
    msg: "{{ auth_persistence_result | to_nice_json }}"
  when: rundeck_integration_enabled | default(false)

- name: install-solr - Display standard summary
  debug:
    msg:
      - "CREDENTIALS PERSISTED SUCCESSFULLY"
      - "Host vars: {{ inventory_hostname }} | default('N/A')"
      - "Backup: /var/solr/.credentials_backup_{{ ansible_date_time.epoch }}"
      - "Rundeck integration: {{ 'ENABLED' if rundeck_integration_enabled | default(false) else 'DISABLED' }}"
      - ""
      - "SECURITY RECOMMENDATIONS:"
      - "1. Encrypt host_vars with: ansible-vault encrypt host_vars/{{ inventory_hostname }}"
      - "2. Restrict file permissions (currently 0600)"
      - "4. Backup /var/solr/.credentials_backup_* to secure location"
  when: not rundeck_integration_enabled | default(false)
---
# Version: 1.1.0
# Description: Pre-flight checks before Solr installation
# Changelog v1.1:
#   - Renamed from preflight.yml
#   - Added Docker Compose version check
#   - Added htpasswd availability check
#   - Rundeck-compatible output

- name: preflight-check - Check Ansible version
  assert:
    that:
      - ansible_version.full is version('2.12.0', '>=')
      - ansible_version.full is version('2.16.0', '<')
    fail_msg: "Ansible version must be between 2.12.0 and 2.15.x"
    success_msg: "Ansible version check passed"

- name: preflight-check - Check OS distribution
  assert:
    that:
      - ansible_distribution in ['Debian', 'Ubuntu']
      - ansible_distribution_major_version | int >= 10
    fail_msg: "OS must be Debian 10+ or Ubuntu 20.04+"
    success_msg: "OS distribution check passed"

- name: preflight-check - Check available disk space
  shell: df -BG {{ solr_compose_dir | dirname }} | tail -1 | awk '{print $4}' | sed 's/G//'
  register: disk_space
  changed_when: false

- name: preflight-check - Verify sufficient disk space
  assert:
    that:
      - disk_space.stdout | int >= solr_min_disk_space_gb | default(5)
    fail_msg: "Insufficient disk space. Required: {{ solr_min_disk_space_gb }}GB, Available: {{ disk_space.stdout }}GB"
    success_msg: "Disk space check passed"

- name: preflight-check - Check if Docker is installed
  command: docker --version
  register: docker_version_check
  changed_when: false
  failed_when: false
# Sollte vorher passieren?! Need to be Tested
- name: preflight-check - Check if Docker Compose is installed
  command: docker compose version
  register: docker_compose_check
  changed_when: false
  failed_when: false

- name: preflight-check - Check required variables
  assert:
    that:
      - customer_name is defined
      - moodle_app_domain is defined
    fail_msg: "Required variables missing: customer_name, moodle_app_domain"
    success_msg: "Required variables check passed"

- name: preflight-check - Check for port conflicts
  shell: netstat -tuln | grep :{{ solr_port }} || echo "PORT_FREE"
  register: port_check
  changed_when: false

- name: preflight-check - Warn if port is in use
  debug:
    msg:
      - "WARNING: Port {{ solr_port }} is already in use"
      - "This may cause deployment issues"
  when: "'PORT_FREE' not in port_check.stdout"

- name: preflight-check - Create Rundeck output
  set_fact:
    preflight_result:
      status: "success"
      timestamp: "{{ ansible_date_time.iso8601 }}"
      message: "Pre-flight checks completed"
      checks:
        ansible_version: "{{ ansible_version.full }}"
        os_distribution: "{{ ansible_distribution }} {{ ansible_distribution_version }}"
        disk_space_gb: "{{ disk_space.stdout }}"
        docker_installed: "{{ docker_version_check.rc == 0 }}"
        docker_compose_installed: "{{ docker_compose_check.rc == 0 }}"
        port_available: "{{ 'PORT_FREE' in port_check.stdout }}"
  when: not rundeck_integration_enabled | default(false)

- name: preflight-check - Display Rundeck output
  debug:
    msg: "{{ preflight_result | to_nice_json }}"
  when: rundeck_integration_enabled | default(false)

- name: preflight-check - Display standard summary
  debug:
    msg:
      - "PRE-FLIGHT CHECKS COMPLETED"
      - "Ansible: {{ ansible_version.full }}"
      - "OS: {{ ansible_distribution }} {{ ansible_distribution_version }}"
      - "Disk space: {{ disk_space.stdout }}GB available"
      - "Docker: {{ 'INSTALLED' if docker_version_check.rc == 0 else 'NOT INSTALLED' }}"
      - "Docker Compose: {{ 'INSTALLED' if docker_compose_check.rc == 0 else 'NOT INSTALLED' }}"
      - "Port {{ solr_port }}: {{ 'AVAILABLE' if 'PORT_FREE' in port_check.stdout else 'IN USE' }}"
  when: not rundeck_integration_enabled | default(false)

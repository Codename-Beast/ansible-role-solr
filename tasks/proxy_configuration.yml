---
# Version: 1.1.0
# Description: Webserver proxy configuration for Solr
# Changelog v1.1:
#   - NEW: Initial proxy configuration task file
#   - Apache reverse proxy configuration
#   - SSL/TLS support
#   - Access control configuration

- name: proxy_config - Check if Apache is installed
  command: apache2 -v
  register: apache_check
  changed_when: false
  failed_when: false

- name: proxy_config - Fail if Apache not installed and proxy is required
  fail:
    msg: "Apache is not installed. Please install Apache first or set solr_proxy_enabled=false"
  when:
    - apache_check.rc != 0
    - solr_proxy_enabled | default(true)

- name: proxy_config - Enable required Apache modules
  apache2_module:
    name: "{{ item }}"
    state: present
  loop:
    - proxy
    - proxy_http
    - headers
    - rewrite
  become: true
  notify: restart apache

- name: proxy_config - Enable SSL module if SSL is enabled
  apache2_module:
    name: ssl
    state: present
  become: true
  when: solr_ssl_enabled | default(true)
  notify: restart apache

- name: proxy_config - Check if SSL certificate exists
  stat:
    path: "{{ solr_ssl_cert_path }}/fullchain.pem"
  register: ssl_cert_check
  when: solr_ssl_enabled | default(true)

- name: proxy_config - Warn if SSL certificate not found
  debug:
    msg:
      - "WARNING: SSL certificate not found at {{ solr_ssl_cert_path }}"
      - "Please ensure Let's Encrypt certificates are available"
      - "Continuing without SSL verification"
  when:
    - solr_ssl_enabled | default(true)
    - not ssl_cert_check.stat.exists

- name: proxy_config - Create Solr proxy configuration for Apache
  template:
    src: apache_solr_proxy.conf.j2
    dest: "/etc/apache2/sites-available/solr-{{ customer_name }}.conf"
    owner: root
    group: root
    mode: '0644'
  become: true
  register: apache_config
  when: ansible_os_family == "Debian"

- name: proxy_config - Create inline Apache proxy configuration if template missing
  copy:
    content: |
      # Solr Reverse Proxy Configuration
      # Customer: {{ customer_name }}
      # Generated: {{ ansible_date_time.iso8601 }}
      
      <IfModule mod_proxy.c>
        ProxyRequests Off
        ProxyPreserveHost On
        
        <Location {{ solr_proxy_path }}>
          ProxyPass http://localhost:{{ solr_port }}/solr
          ProxyPassReverse http://localhost:{{ solr_port }}/solr
          
          # Security headers
          Header always set X-Frame-Options "DENY"
          Header always set X-Content-Type-Options "nosniff"
          Header always set X-XSS-Protection "1; mode=block"
          
          # Access control - restrict to localhost and specific IPs
          Require ip 127.0.0.1 ::1
          {% if solr_allowed_ips is defined %}
          {% for ip in solr_allowed_ips %}
          Require ip {{ ip }}
          {% endfor %}
          {% endif %}
        </Location>
      </IfModule>
      
      {% if solr_ssl_enabled and ssl_cert_check.stat.exists %}
      <VirtualHost *:443>
        ServerName {{ moodle_app_domain }}
        
        SSLEngine on
        SSLCertificateFile {{ solr_ssl_cert_path }}/fullchain.pem
        SSLCertificateKeyFile {{ solr_ssl_cert_path }}/privkey.pem
        
        Include sites-available/solr-{{ customer_name }}.conf
      </VirtualHost>
      {% endif %}
    dest: "/etc/apache2/sites-available/solr-{{ customer_name }}.conf"
    owner: root
    group: root
    mode: '0644'
  become: true
  register: apache_config_inline
  when:
    - ansible_os_family == "Debian"
    - apache_config is not defined or apache_config.failed | default(false)

- name: proxy_config - Enable Solr site configuration
  command: a2ensite solr-{{ customer_name }}.conf
  become: true
  register: site_enabled
  changed_when: "'Enabling site' in site_enabled.stdout"
  notify: reload apache
  when: ansible_os_family == "Debian"

- name: proxy_config - Test Apache configuration syntax
  command: apache2ctl configtest
  register: apache_test
  changed_when: false
  failed_when: false
  become: true

- name: proxy_config - Display Apache config test result
  debug:
    msg:
      - "Apache configuration test: {{ 'PASSED' if 'Syntax OK' in apache_test.stderr else 'WARNING' }}"
      - "{{ apache_test.stderr }}"

- name: proxy_config - Reload Apache if configuration changed
  systemd:
    name: apache2
    state: reloaded
  become: true
  when: apache_config.changed or apache_config_inline.changed or site_enabled.changed


- name: Test Solr proxy endpoint
  uri:
    url: "http://localhost{{ solr_proxy_path }}/admin/ping"
    method: GET
    user: "{{ solr_admin_user }}"
    password: "{{ solr_admin_password }}"
    force_basic_auth: yes
    status_code: 200
  register: proxy_test
  until: proxy_test.status == 200
  retries: 3
  delay: 5
  changed_when: false
  failed_when: false

- name: proxy_config - Create Rundeck output
  set_fact:
    proxy_configuration_result:
      status: "success"
      timestamp: "{{ ansible_date_time.iso8601 }}"
      message: "Proxy configuration completed"
      details:
        proxy_path: "{{ solr_proxy_path }}"
        proxy_target: "http://localhost:{{ solr_port }}/solr"
        apache_version: "{{ apache_check.stdout }}"
        ssl_enabled: "{{ solr_ssl_enabled | default(true) }}"
        ssl_cert_exists: "{{ ssl_cert_check.stat.exists if solr_ssl_enabled else false }}"
        apache_config_test: "{{ 'PASSED' if 'Syntax OK' in apache_test.stderr else 'WARNING' }}"
        proxy_test: "{{ 'PASSED' if proxy_test.status == 200 else 'FAILED' }}"
        proxy_url: "http://{{ moodle_app_domain }}{{ solr_proxy_path }}"

- name: proxy_config - Display Rundeck output
  debug:
    msg: "{{ proxy_configuration_result | to_nice_json }}"
  when: rundeck_integration_enabled | default(false)

- name: proxy_config - Display standard summary
  debug:
    msg:
      - "PROXY CONFIGURATION COMPLETED"
      - "Proxy path: {{ solr_proxy_path }}"
      - "Proxy target: http://localhost:{{ solr_port }}/solr"
      - "Apache version: {{ apache_check.stdout }}"
      - "SSL enabled: {{ 'YES' if solr_ssl_enabled | default(true) else 'NO' }}"
      - "SSL certificate: {{ 'FOUND' if ssl_cert_check.stat.exists else 'NOT FOUND' }}"
      - "Apache config test: {{ 'PASSED' if 'Syntax OK' in apache_test.stderr else 'WARNING' }}"
      - "Proxy test: {{ 'PASSED' if proxy_test.status == 200 else 'FAILED' }}"
      - "Proxy URL: http://{{ moodle_app_domain }}{{ solr_proxy_path }}"
  when: not rundeck_integration_enabled | default(false)
